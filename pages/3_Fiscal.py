# import pandas as pd
# import streamlit as st
#
# from classes.ui.pages import Page
# from classes.ui.logo import Logo
# from classes.ui.footer import Footer
# from classes.ui.headermenu import HeaderMenu
# from classes.backend.authentication import Authentication
# from classes.ui.textelement import TextElement
# from model import ApiConnection
#
# # Configura a p√°gina
# Page(name="Fiscal", icon="üìÉ", page_layout="wide")
# HeaderMenu.hide_menu()
# Logo("static/teamLogo.png")
#
# # Autentica√ß√£o
# Authentication.authenticate()
#
# if st.session_state.get("authenticated", False):
#     TextElement.write("# üìÉ Fiscal")
#     TextElement.write_caption("Utilize as ferramentas desenvolvidas para o setor.")
#     TextElement.write("---")
#
#     TextElement.write("## üîé Consulta de NCMS")
#     TextElement.write_caption("Busca NCMS na base de dados.")
#     TextElement.write("---")
#
#     # Carrega os dados
#     with st.spinner("üîÑ Carregando dados..."):
#         fiscal = ApiConnection.get_fiscal()
#
#     # Lista de c√≥digos √∫nicos
#     codigos_unicos = fiscal["C√≥digo"].dropna().astype(str).unique()
#     codigos_ordenados = sorted(codigos_unicos)
#
#     # Layout em colunas para os filtros
#     col1, col2 = st.columns(2)
#
#     with col1:
#         codigo_selecionado = st.selectbox(
#             "C√≥digo...",
#             options=["Todos"] + codigos_ordenados,
#             help="Selecione um c√≥digo NCM ou 'Todos' para n√£o filtrar por c√≥digo."
#         )
#
#     with col2:
#         descricao_input = st.text_input(
#             "Descri√ß√£o...",
#             help="Digite parte da descri√ß√£o do NCM para buscar."
#         )
#
#     if st.button("CONSULTAR"):
#         with st.spinner("üîç Buscando resultados..."):
#             filtered_fiscal = fiscal.copy()
#
#             # Filtro por c√≥digo (se n√£o for "Todos")
#             if codigo_selecionado != "Todos":
#                 filtered_fiscal = filtered_fiscal[
#                     filtered_fiscal["C√≥digo"].astype(str) == codigo_selecionado
#                 ]
#
#             # Filtro por descri√ß√£o (se preenchido)
#             if descricao_input.strip():
#                 filtered_fiscal = filtered_fiscal[
#                     filtered_fiscal["Descri√ß√£o"].str.contains(descricao_input, case=False, na=False)
#                 ]
#
#             # Resultado
#             if filtered_fiscal.empty:
#                 st.info("üîé Nenhum NCM encontrado com os crit√©rios informados.")
#             else:
#                 st.dataframe(filtered_fiscal)
#
# else:
#     st.warning("‚ö†Ô∏è Voc√™ precisa estar logado para acessar esta p√°gina.")
#
# # Sidebar com bot√£o de logout
# with st.sidebar:
#     if st.button("SAIR"):
#         Authentication.logout()
#
# # Rodap√©
# Footer.footer()

import asyncio
import streamlit as st
import pandas as pd
from classes.ui.pages import Page
from classes.ui.logo import Logo
from classes.ui.footer import Footer
from classes.ui.headermenu import HeaderMenu
from classes.backend.authentication import Authentication
from classes.ui.textelement import TextElement
from model import ApiConnection

Page(name="Fiscal", icon="üìÉ", page_layout="wide")
HeaderMenu.hide_menu()
Logo("static/teamLogo.png")

Authentication.authenticate()

if st.session_state.get("authenticated", False):
    TextElement.write("# üìÉ Fiscal")
    TextElement.write_caption("Utilize as ferramentas desenvolvidas para o setor.")
    TextElement.write("---")

    TextElement.write("## Consulta de NCMS")
    TextElement.write_caption("Busca NCMS na base de dados.")
    TextElement.write("---")

    with st.spinner("üîÑ Carregando dados..."):
        fiscal = asyncio.run(ApiConnection.get_fiscal_async())

    codigos_unicos = fiscal["C√≥digo"].dropna().astype(str).unique()
    codigos_ordenados = sorted(codigos_unicos)

    col1, col2 = st.columns(2)

    with col1:
        codigo_selecionado = st.selectbox(
            "C√≥digo...",
            options=["‚õîÔ∏è Nenhum filtro"] + codigos_ordenados,
            help="Selecione um c√≥digo NCM ou '‚õîÔ∏è Nenhum filtro' para n√£o aplicar filtro por c√≥digo."
        )

    with col2:
        descricao_input = st.text_input(
            "Descri√ß√£o...",
            help="Digite parte da descri√ß√£o do NCM para buscar."
        )

    if st.button("CONSULTAR"):
        filtered_fiscal = fiscal.copy()

        if codigo_selecionado != "‚õîÔ∏è Nenhum filtro":
            filtered_fiscal = filtered_fiscal[
                filtered_fiscal["C√≥digo"].astype(str) == codigo_selecionado
            ]

        if descricao_input.strip():
            filtered_fiscal = filtered_fiscal[
                filtered_fiscal["Descri√ß√£o"].str.contains(descricao_input, case=False, na=False)
            ]

        if filtered_fiscal.empty:
            st.info("üîé Nenhum NCM encontrado com os crit√©rios informados.")
        else:
            st.dataframe(filtered_fiscal)

else:
    st.warning("‚ö†Ô∏è Voc√™ precisa estar logado para acessar esta p√°gina.")

with st.sidebar:
    if st.button("SAIR"):
        Authentication.logout()

Footer.footer()
